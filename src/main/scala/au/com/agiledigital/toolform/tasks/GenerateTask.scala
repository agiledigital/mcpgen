package au.com.agiledigital.toolform.tasks

import java.io.File

import au.com.agiledigital.toolform.app.{ToolFormConfiguration, ToolFormError}
import au.com.agiledigital.toolform.model.Project
import au.com.agiledigital.toolform.tasks.GenerateTaskOutputType.GenerateTaskOutputType

class GenerateTask() extends Task {

  override def run(toolFormConfiguration: ToolFormConfiguration, project: Project): Either[ToolFormError, String] =
    Right("Not implemented yet")
}

/**
  * The configuration for the generate task.
  *
  * @param out                    The path to output the result of this task. For Docker Compose V3 this will be a single file.
  *                               For Kubernetes this will be a folder.
  * @param generateTaskOutputType The format of the file generated by the "Generate" task.
  */
final case class GenerateTaskConfiguration(out: File = new File("."), generateTaskOutputType: GenerateTaskOutputType = GenerateTaskOutputType.DockerComposeV3)

/**
  * An enumeration representing all the modes this tool can function in.
  */
object GenerateTaskOutputType extends Enumeration {
  type GenerateTaskOutputType = Value

  val DockerComposeV3, Kubernetes = Value
}
